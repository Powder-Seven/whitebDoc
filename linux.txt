
nodejs安装
https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions


find / -name  'interfaces'

locate interfaces

wget https://nodejs.org/dist/v7.8.0/node-v7.8.0.tar.gz

查看python版本：
python --version

1.下载Python-2.7.12
wget https://www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz

2.解压
tar   zxvf   Python-2.7.12.tgz

3.更改工作目录
cd Python-2.7.12  

4.安装
./configure  
make all             
make install  
make clean  
make distclean  


5.查看版本信息
/usr/local/bin/python2.7 -V  


6.建立软连接，使系统默认的 python指向 python2.7
#mv /usr/bin/python /usr/bin/python2.6.6  
#ln -s /usr/local/bin/python2.7 /usr/bin/python  


7.重新检验Python 版本
#python -V  


8 解决系统 Python 软链接指向 Python2.7 版本后，因为yum是不兼容 Python 2.7的，所以yum不能正常工作，需要指定 yum 的Python版本
#vi /usr/bin/yum  
将文件头部的
#!/usr/bin/python
改成
#!/usr/bin/python2.6.6

从以上输出可以看出，gcc的动态库还是旧版本的。说明出现这些问题，是因为升级gcc时，生成的动态库没有替换老版本gcc的动态库。

----------------nodejs Gcc升级问题----------------------------

http://www.jianshu.com/p/c958bd3c7d77  gcc升级

--------------------------------------------------------------
2. 问题处理
执行以下命令，查找编译gcc时生成的最新动态库：

find / -name "libstdc++.so*"
输出如下：

/home/gcc-5.2.0/gcc-temp/stage1-x86_64-unknown-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so
/home/gcc-5.2.0/gcc-temp/stage1-x86_64-unknown-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6
/home/gcc-5.2.0/gcc-temp/stage1-x86_64-unknown-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6.0.21  //最新动态库
……
/home/gcc-5.2.0/gcc-temp是升级gcc时的输出目录。

将上面的最新动态库libstdc++.so.6.0.21复制到/usr/lib64目录下：

cp /home/gcc-5.2.0/gcc-temp/stage1-x86_64-unknown-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6.0.21 /usr/lib64

复制后，修改系统默认动态库的指向，即：重建默认库的软连接。

切换工作目录至/usr/lib64：

cd /usr/lib64
删除原来软连接：

rm -rf libstdc++.so.6
将默认库的软连接指向最新动态库：

ln -s libstdc++.so.6.0.21 libstdc++.so.6

默认动态库升级完成。重新运行以下命令检查动态库：

strings /usr/lib64/libstdc++.so.6 | grep GLIBC
现在输出如下：